services:

  api:
      build:
        context: ../..
        dockerfile: ops/docker/Dockerfile.local
        args:
          ENV: dev
      ports:
        - "5000:5000"
      volumes:
        - ../../:/app
        - /app/.venv
      environment:
        FLASK_APP: run.py
        FLASK_ENV: development
        POSTGRES_DB: fever_db
        POSTGRES_USER: fever_user
        POSTGRES_PASSWORD: fever_pass
        POSTGRES_HOST: db
        POSTGRES_PORT: 5432
        REDIS_HOST: redis
        REDIS_PORT: 6379
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_PORT: 5672
        CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9091/status"]
          interval: 1s
          timeout: 3s
          retries: 10
      depends_on:
        db:
          condition: service_healthy
        rabbitmq:
          condition: service_healthy

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: fever_db
      POSTGRES_USER: fever_user
      POSTGRES_PASSWORD: fever_pass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fever_user"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"   # RabbitMQ main communication port
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: